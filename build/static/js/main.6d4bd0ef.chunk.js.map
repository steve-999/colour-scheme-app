{"version":3,"sources":["redux/actionTypes.js","shared/colors_list.js","misc_app_specific_fns.js","misc_functions.js","redux/actionCreators.js","components/CssForm.js","components/Display.js","components/Colors.js","components/FontsList.js","components/InputContainer.js","components/Home.js","components/Navbar.js","App.js","reportWebVitals.js","redux/rootReducer.js","index.js"],"names":["LOAD_COLORS_DATA","LOAD_FONT_FAMILIES","UPDATE_CSS_PROPERTY_VALUE","SET_ID_PROP_SELECTED","SET_PROPERTY_TYPE","SET_MAIN_COLUMNS_HEIGHT","initState","colors_list","colorsDOL","colorNamesList","color_groups_unique","fontFamilies","selectedColor","undefined","selectedFont","cssProperties","navbar_backgroundColor","logo_text","logo_fontFamily","logo_fontSize","logo_fontWeight","logo_color","logo_padding","logo_margin","title_fontFamily","title_fontSize","title_fontWeight","title_color","title_padding","title_margin","p_fontFamily","p_fontSize","p_fontWeight","p_color","p_padding","p_margin","p_lineHeight","property_type","id_prop_selected","mainColumnsHeight","COLORS_LIST","isColorProperty","id_prop_name","toLowerCase","endsWith","isFontFamilyProperty","getColorsData","groups_unique","arr","set_var","Set","map","x","add","sort","sorted_unique","forEach","rgb","JSON","parse","parseInt","Math","sqrt","push","group_name","key","reverse","arr2","a","b","sort_LOD_by_key","scrollToElement","element","containerSelector","rowHeight","prevOffsetTop","element_bounding_rect","getBoundingClientRect","element_top","top","element_bottom","height","direction","offsetTop","container_bounding_rect","document","querySelector","container_top","container_bottom","scrollIntoView","updateCssPropertyValueAC","id_prop","value","type","ActionTypes","payload","CssForm","props","handleCssFocusChange","e","change_selected_cells_styles","target","name","setPropertyType","setIdPropSelected","handleCssKeyDown","keyValue","get_next_value","text","newVal","currIndex","indexOf","length","currPropText","newColor","updateCssPropertyValue","newFont","currFontSize","replace","Number","isInteger","newFontSize","newFontSizeText","newFontWeight","currFontWeight","step_size","newLineHeight","currLineHeight","parseFloat","toFixed","state","curr_selected_id_prop","Object","keys","this","el","getElementById","style","border","backgroundColor","curr_selected","activeElement","element_property","split","className","id","onKeyDown","onFocus","autoComplete","spellCheck","readOnly","create_input_css_property_rows","Component","connect","dispatch","setIdPropSelectedAC","logo_styles","navbar_styles","title_styles","p_styles","fontFamily","fontSize","fontWeight","color","padding","margin","lineHeight","Colors","handleColorClick","colorName","highlightSelectedColor","colorsForColourGroup","group_colors","i","bgColor","textColor","data-color-name","onClick","prevProps","curr_selected_color","boxShadow","setState","colors_JSX","FontsList","handleFontClick","fontName","highlightSelectedFont","calc_container_height","container","font","container_width","clientWidth","font_width","width","Ncols","floor","container_height","centred","curr_selected_font","prevScrollTo","rows","data-font-name","InputContainer","useState","stateVal","useSelector","useDispatch","useEffect","handleInputChange","val","match","console","log","handlePaddingMarginChange","top_bottom_element","left_right_element","padding_margin_string","includes","min","max","step","onChange","px_array","class_names","px_string","get_padding_margin_JSX","debounce","fn","ms","timer","clearTimeout","setTimeout","apply","arguments","Home","handleResize","window","innerHeight","innerWidth","cssFormHeight","clientHeight","columnHeight","body","header","display","setMainColumnsHeight","loadColorsData","loadFontFamilies","addEventListener","removeEventListener","cssForm","windowHeight","getDisplayColumnHeight","getPropertiesComponent","colors","concat","setMainColumnsHeightAC","Navbar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","action","store","createStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6d4bd0ef.chunk.js","sourcesContent":["export const LOAD_COLORS_DATA = 'LOAD_COLORS_DATA';\r\nexport const LOAD_FONT_FAMILIES = 'LOAD_FONT_FAMILIES';\r\nexport const UPDATE_CSS_PROPERTY_VALUE = 'UPDATE_CSS_PROPERTY_VALUE';\r\nexport const SET_ID_PROP_SELECTED = 'SET_ID_PROP_SELECTED';\r\nexport const SET_PROPERTY_TYPE = 'SET_PROPERTY_TYPE';\r\nexport const SET_MAIN_COLUMNS_HEIGHT = 'SET_MAIN_COLUMNS_HEIGHT';\r\n\r\nexport const initState = {\r\n    colors_list: [],\r\n    colorsDOL: {},\r\n    colorNamesList: [],\r\n    color_groups_unique: [],\r\n    fontFamilies: [],\r\n    selectedColor: undefined,\r\n    selectedFont: undefined,\r\n    cssProperties: {\r\n        navbar_backgroundColor: 'DarkViolet',\r\n        logo_text: 'Colours App',\r\n        logo_fontFamily: 'Raleway',\r\n        logo_fontSize: '26px',\r\n        logo_fontWeight: '800',\r\n        logo_color: 'Pink',\r\n        logo_padding: '3px 3px',\r\n        logo_margin: '3px 10px',\r\n        title_fontFamily: 'Raleway',\r\n        title_fontSize: '21px',\r\n        title_fontWeight: '700',\r\n        title_color: 'Navy',\r\n        title_padding: '0px 0px',\r\n        title_margin: '10px 3px',\r\n        p_fontFamily: 'Montserrat',\r\n        p_fontSize: '14px',\r\n        p_fontWeight: '500',\r\n        p_color: 'Black',\r\n        p_padding: '3px 3px',\r\n        p_margin: '0px 0px',\r\n        p_lineHeight: '1.5',\r\n    },\r\n    property_type: undefined,\r\n    id_prop_selected: undefined,\r\n    mainColumnsHeight: undefined,\r\n}\r\n\r\n\r\n","\r\nconst COLORS_LIST = [\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#0000FF\",\r\n        \"name\": \"Blue\",\r\n        \"rgb\": \"[0, 0, 255]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#000080\",\r\n        \"name\": \"Navy\",\r\n        \"rgb\": \"[0, 0, 128]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#00008B\",\r\n        \"name\": \"DarkBlue\",\r\n        \"rgb\": \"[0, 0, 139]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#0000CD\",\r\n        \"name\": \"MediumBlue\",\r\n        \"rgb\": \"[0, 0, 205]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#00CED1\",\r\n        \"name\": \"DarkTurquoise\",\r\n        \"rgb\": \"[0, 206, 209]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#4169E1\",\r\n        \"name\": \"RoyalBlue\",\r\n        \"rgb\": \"[65, 105, 225]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#7B68EE\",\r\n        \"name\": \"MediumSlateBlue\",\r\n        \"rgb\": \"[123, 104, 238]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#191970\",\r\n        \"name\": \"MidnightBlue\",\r\n        \"rgb\": \"[25, 25, 112]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#6495ED\",\r\n        \"name\": \"CornflowerBlue\",\r\n        \"rgb\": \"[100, 149, 237]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#00BFFF\",\r\n        \"name\": \"DeepSkyBlue\",\r\n        \"rgb\": \"[0, 191, 255]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#87CEFA\",\r\n        \"name\": \"LightSkyBlue\",\r\n        \"rgb\": \"[135, 206, 250]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#87CEEB\",\r\n        \"name\": \"SkyBlue\",\r\n        \"rgb\": \"[135, 206, 235]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#ADD8E6\",\r\n        \"name\": \"LightBlue\",\r\n        \"rgb\": \"[173, 216, 230]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#B0E0E6\",\r\n        \"name\": \"PowderBlue\",\r\n        \"rgb\": \"[176, 224, 230]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#B0C4DE\",\r\n        \"name\": \"LightSteelBlue\",\r\n        \"rgb\": \"[176, 196, 222]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#1E90FF\",\r\n        \"name\": \"DodgerBlue\",\r\n        \"rgb\": \"[30, 144, 255]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#4682B4\",\r\n        \"name\": \"SteelBlue\",\r\n        \"rgb\": \"[70, 130, 180]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#5F9EA0\",\r\n        \"name\": \"CadetBlue\",\r\n        \"rgb\": \"[95, 158, 160]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#00FFFF\",\r\n        \"name\": \"Aqua\",\r\n        \"rgb\": \"[0, 255, 255]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#00FFFF\",\r\n        \"name\": \"Cyan\",\r\n        \"rgb\": \"[0, 255, 255]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#E0FFFF\",\r\n        \"name\": \"LightCyan\",\r\n        \"rgb\": \"[224, 255, 255]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#AFEEEE\",\r\n        \"name\": \"PaleTurquoise\",\r\n        \"rgb\": \"[175, 238, 238]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#7FFFD4\",\r\n        \"name\": \"Aquamarine\",\r\n        \"rgb\": \"[127, 255, 212]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#40E0D0\",\r\n        \"name\": \"Turquoise\",\r\n        \"rgb\": \"[64, 224, 208]\"\r\n    },\r\n    {\r\n        \"group\": \"blue\",\r\n        \"hex\": \"#48D1CC\",\r\n        \"name\": \"MediumTurquoise\",\r\n        \"rgb\": \"[72, 209, 204]\"\r\n    },\r\n    {\r\n        \"group\": \"brown\",\r\n        \"hex\": \"#BC8F8F\",\r\n        \"name\": \"RosyBrown\",\r\n        \"rgb\": \"[188, 143, 143]\"\r\n    },\r\n    {\r\n        \"group\": \"brown\",\r\n        \"hex\": \"#800000\",\r\n        \"name\": \"Maroon\",\r\n        \"rgb\": \"[128, 0, 0]\"\r\n    },\r\n    {\r\n        \"group\": \"brown\",\r\n        \"hex\": \"#A52A2A\",\r\n        \"name\": \"Brown\",\r\n        \"rgb\": \"[165, 42, 42]\"\r\n    },\r\n    {\r\n        \"group\": \"brown\",\r\n        \"hex\": \"#F4A460\",\r\n        \"name\": \"SandyBrown\",\r\n        \"rgb\": \"[244, 164, 96]\"\r\n    },\r\n    {\r\n        \"group\": \"brown\",\r\n        \"hex\": \"#A0522D\",\r\n        \"name\": \"Sienna\",\r\n        \"rgb\": \"[160, 82, 45]\"\r\n    },\r\n    {\r\n        \"group\": \"brown\",\r\n        \"hex\": \"#D2691E\",\r\n        \"name\": \"Chocolate\",\r\n        \"rgb\": \"[210, 105, 30]\"\r\n    },\r\n    {\r\n        \"group\": \"brown\",\r\n        \"hex\": \"#CD853F\",\r\n        \"name\": \"Peru\",\r\n        \"rgb\": \"[205, 133, 63]\"\r\n    },\r\n    {\r\n        \"group\": \"brown\",\r\n        \"hex\": \"#B8860B\",\r\n        \"name\": \"DarkGoldenrod\",\r\n        \"rgb\": \"[184, 134, 11]\"\r\n    },\r\n    {\r\n        \"group\": \"brown\",\r\n        \"hex\": \"#FFF8DC\",\r\n        \"name\": \"Cornsilk\",\r\n        \"rgb\": \"[255, 248, 220]\"\r\n    },\r\n    {\r\n        \"group\": \"brown\",\r\n        \"hex\": \"#FFEBCD\",\r\n        \"name\": \"BlanchedAlmond\",\r\n        \"rgb\": \"[255, 235, 205]\"\r\n    },\r\n    {\r\n        \"group\": \"brown\",\r\n        \"hex\": \"#FFE4C4\",\r\n        \"name\": \"Bisque\",\r\n        \"rgb\": \"[255, 228, 196]\"\r\n    },\r\n    {\r\n        \"group\": \"brown\",\r\n        \"hex\": \"#FFDEAD\",\r\n        \"name\": \"NavajoWhite\",\r\n        \"rgb\": \"[255, 222, 173]\"\r\n    },\r\n    {\r\n        \"group\": \"brown\",\r\n        \"hex\": \"#DAA520\",\r\n        \"name\": \"Goldenrod\",\r\n        \"rgb\": \"[218, 165, 32]\"\r\n    },\r\n    {\r\n        \"group\": \"brown\",\r\n        \"hex\": \"#DEB887\",\r\n        \"name\": \"BurlyWood\",\r\n        \"rgb\": \"[222, 184, 135]\"\r\n    },\r\n    {\r\n        \"group\": \"brown\",\r\n        \"hex\": \"#D2B48C\",\r\n        \"name\": \"Tan\",\r\n        \"rgb\": \"[210, 180, 140]\"\r\n    },\r\n    {\r\n        \"group\": \"brown\",\r\n        \"hex\": \"#8B4513\",\r\n        \"name\": \"SaddleBrown\",\r\n        \"rgb\": \"[139, 69, 19]\"\r\n    },\r\n    {\r\n        \"group\": \"brown\",\r\n        \"hex\": \"#F5DEB3\",\r\n        \"name\": \"Wheat\",\r\n        \"rgb\": \"[245, 222, 179]\"\r\n    },\r\n    {\r\n        \"group\": \"gray\",\r\n        \"hex\": \"#2F4F4F\",\r\n        \"name\": \"DarkSlateGray\",\r\n        \"rgb\": \"[47, 79, 79]\"\r\n    },\r\n    {\r\n        \"group\": \"gray\",\r\n        \"hex\": \"#000000\",\r\n        \"name\": \"Black\",\r\n        \"rgb\": \"[0, 0, 0]\"\r\n    },\r\n    {\r\n        \"group\": \"gray\",\r\n        \"hex\": \"#DCDCDC\",\r\n        \"name\": \"Gainsboro\",\r\n        \"rgb\": \"[220, 220, 220]\"\r\n    },\r\n    {\r\n        \"group\": \"gray\",\r\n        \"hex\": \"#D3D3D3\",\r\n        \"name\": \"LightGray\",\r\n        \"rgb\": \"[211, 211, 211]\"\r\n    },\r\n    {\r\n        \"group\": \"gray\",\r\n        \"hex\": \"#C0C0C0\",\r\n        \"name\": \"Silver\",\r\n        \"rgb\": \"[192, 192, 192]\"\r\n    },\r\n    {\r\n        \"group\": \"gray\",\r\n        \"hex\": \"#A9A9A9\",\r\n        \"name\": \"DarkGray\",\r\n        \"rgb\": \"[169, 169, 169]\"\r\n    },\r\n    {\r\n        \"group\": \"gray\",\r\n        \"hex\": \"#808080\",\r\n        \"name\": \"Gray\",\r\n        \"rgb\": \"[128, 128, 128]\"\r\n    },\r\n    {\r\n        \"group\": \"gray\",\r\n        \"hex\": \"#696969\",\r\n        \"name\": \"DimGray\",\r\n        \"rgb\": \"[105, 105, 105]\"\r\n    },\r\n    {\r\n        \"group\": \"gray\",\r\n        \"hex\": \"#778899\",\r\n        \"name\": \"LightSlateGray\",\r\n        \"rgb\": \"[119, 136, 153]\"\r\n    },\r\n    {\r\n        \"group\": \"gray\",\r\n        \"hex\": \"#708090\",\r\n        \"name\": \"SlateGray\",\r\n        \"rgb\": \"[112, 128, 144]\"\r\n    },\r\n    {\r\n        \"group\": \"gray-triples\",\r\n        \"hex\": \"#111111\",\r\n        \"name\": \"#111\",\r\n        \"rgb\": \"[17, 17, 17]\"\r\n    },\r\n    {\r\n        \"group\": \"gray-triples\",\r\n        \"hex\": \"#222222\",\r\n        \"name\": \"#222\",\r\n        \"rgb\": \"[34, 34, 34]\"\r\n    },\r\n    {\r\n        \"group\": \"gray-triples\",\r\n        \"hex\": \"#333333\",\r\n        \"name\": \"#333\",\r\n        \"rgb\": \"[51, 51, 51]\"\r\n    },\r\n    {\r\n        \"group\": \"gray-triples\",\r\n        \"hex\": \"#444444\",\r\n        \"name\": \"#444\",\r\n        \"rgb\": \"[68, 68, 68]\"\r\n    },\r\n    {\r\n        \"group\": \"gray-triples\",\r\n        \"hex\": \"#555555\",\r\n        \"name\": \"#555\",\r\n        \"rgb\": \"[85, 85, 85]\"\r\n    },\r\n    {\r\n        \"group\": \"gray-triples\",\r\n        \"hex\": \"#666666\",\r\n        \"name\": \"#666\",\r\n        \"rgb\": \"[102, 102, 102]\"\r\n    },\r\n    {\r\n        \"group\": \"gray-triples\",\r\n        \"hex\": \"#777777\",\r\n        \"name\": \"#777\",\r\n        \"rgb\": \"[119, 119, 119]\"\r\n    },\r\n    {\r\n        \"group\": \"gray-triples\",\r\n        \"hex\": \"#888888\",\r\n        \"name\": \"#888\",\r\n        \"rgb\": \"[136, 136, 136]\"\r\n    },\r\n    {\r\n        \"group\": \"gray-triples\",\r\n        \"hex\": \"#999999\",\r\n        \"name\": \"#999\",\r\n        \"rgb\": \"[153, 153, 153]\"\r\n    },\r\n    {\r\n        \"group\": \"gray-triples\",\r\n        \"hex\": \"#aaaaaa\",\r\n        \"name\": \"#aaa\",\r\n        \"rgb\": \"[170, 170, 170]\"\r\n    },\r\n    {\r\n        \"group\": \"gray-triples\",\r\n        \"hex\": \"#bbbbbb\",\r\n        \"name\": \"#bbb\",\r\n        \"rgb\": \"[187, 187, 187]\"\r\n    },\r\n    {\r\n        \"group\": \"gray-triples\",\r\n        \"hex\": \"#cccccc\",\r\n        \"name\": \"#ccc\",\r\n        \"rgb\": \"[204, 204, 204]\"\r\n    },\r\n    {\r\n        \"group\": \"gray-triples\",\r\n        \"hex\": \"#dddddd\",\r\n        \"name\": \"#ddd\",\r\n        \"rgb\": \"[221, 221, 221]\"\r\n    },\r\n    {\r\n        \"group\": \"gray-triples\",\r\n        \"hex\": \"#eeeeee\",\r\n        \"name\": \"#eee\",\r\n        \"rgb\": \"[238, 238, 238]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#9ACD32\",\r\n        \"name\": \"YellowGreen\",\r\n        \"rgb\": \"[154, 205, 50]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#6B8E23\",\r\n        \"name\": \"OliveDrab\",\r\n        \"rgb\": \"[107, 142, 35]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#808000\",\r\n        \"name\": \"Olive\",\r\n        \"rgb\": \"[128, 128, 0]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#556B2F\",\r\n        \"name\": \"DarkOliveGreen\",\r\n        \"rgb\": \"[85, 107, 47]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#008B8B\",\r\n        \"name\": \"DarkCyan\",\r\n        \"rgb\": \"[0, 139, 139]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#8FBC8B\",\r\n        \"name\": \"DarkSeaGreen\",\r\n        \"rgb\": \"[143, 188, 139]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#006400\",\r\n        \"name\": \"DarkGreen\",\r\n        \"rgb\": \"[0, 100, 0]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#008080\",\r\n        \"name\": \"Teal\",\r\n        \"rgb\": \"[0, 128, 128]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#66CDAA\",\r\n        \"name\": \"MediumAquamarine\",\r\n        \"rgb\": \"[102, 205, 170]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#008000\",\r\n        \"name\": \"Green\",\r\n        \"rgb\": \"[0, 128, 0]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#20B2AA\",\r\n        \"name\": \"LightSeaGreen\",\r\n        \"rgb\": \"[32, 178, 170]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#2E8B57\",\r\n        \"name\": \"SeaGreen\",\r\n        \"rgb\": \"[46, 139, 87]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#228B22\",\r\n        \"name\": \"ForestGreen\",\r\n        \"rgb\": \"[34, 139, 34]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#ADFF2F\",\r\n        \"name\": \"GreenYellow\",\r\n        \"rgb\": \"[173, 255, 47]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#7CFC00\",\r\n        \"name\": \"LawnGreen\",\r\n        \"rgb\": \"[124, 252, 0]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#00FF00\",\r\n        \"name\": \"Lime\",\r\n        \"rgb\": \"[0, 255, 0]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#32CD32\",\r\n        \"name\": \"LimeGreen\",\r\n        \"rgb\": \"[50, 205, 50]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#7FFF00\",\r\n        \"name\": \"Chartreuse\",\r\n        \"rgb\": \"[127, 255, 0]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#90EE90\",\r\n        \"name\": \"LightGreen\",\r\n        \"rgb\": \"[144, 238, 144]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#00FA9A\",\r\n        \"name\": \"MediumSpringGreen\",\r\n        \"rgb\": \"[0, 250, 154]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#00FF7F\",\r\n        \"name\": \"SpringGreen\",\r\n        \"rgb\": \"[0, 255, 127]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#3CB371\",\r\n        \"name\": \"MediumSeaGreen\",\r\n        \"rgb\": \"[60, 179, 113]\"\r\n    },\r\n    {\r\n        \"group\": \"green\",\r\n        \"hex\": \"#98FB98\",\r\n        \"name\": \"PaleGreen\",\r\n        \"rgb\": \"[152, 251, 152]\"\r\n    },\r\n    {\r\n        \"group\": \"orange\",\r\n        \"hex\": \"#FF8C00\",\r\n        \"name\": \"DarkOrange\",\r\n        \"rgb\": \"[255, 140, 0]\"\r\n    },\r\n    // {\r\n    //     \"group\": \"orange\",\r\n    //     \"hex\": \"#FFA07A\",\r\n    //     \"name\": \"LightSalmon\",\r\n    //     \"rgb\": \"[255, 160, 122]\"\r\n    // },\r\n    {\r\n        \"group\": \"orange\",\r\n        \"hex\": \"#FF7F50\",\r\n        \"name\": \"Coral\",\r\n        \"rgb\": \"[255, 127, 80]\"\r\n    },\r\n    {\r\n        \"group\": \"orange\",\r\n        \"hex\": \"#FF6347\",\r\n        \"name\": \"Tomato\",\r\n        \"rgb\": \"[255, 99, 71]\"\r\n    },\r\n    {\r\n        \"group\": \"orange\",\r\n        \"hex\": \"#FF4500\",\r\n        \"name\": \"OrangeRed\",\r\n        \"rgb\": \"[255, 69, 0]\"\r\n    },\r\n    {\r\n        \"group\": \"orange\",\r\n        \"hex\": \"#FFA500\",\r\n        \"name\": \"Orange\",\r\n        \"rgb\": \"[255, 165, 0]\"\r\n    },\r\n    {\r\n        \"group\": \"pink\",\r\n        \"hex\": \"#FFB6C1\",\r\n        \"name\": \"LightPink\",\r\n        \"rgb\": \"[255, 182, 193]\"\r\n    },\r\n    {\r\n        \"group\": \"pink\",\r\n        \"hex\": \"#C71585\",\r\n        \"name\": \"MediumVioletRed\",\r\n        \"rgb\": \"[199, 21, 133]\"\r\n    },\r\n    {\r\n        \"group\": \"pink\",\r\n        \"hex\": \"#FFC0CB\",\r\n        \"name\": \"Pink\",\r\n        \"rgb\": \"[255, 192, 203]\"\r\n    },\r\n    {\r\n        \"group\": \"pink\",\r\n        \"hex\": \"#DB7093\",\r\n        \"name\": \"PaleVioletRed\",\r\n        \"rgb\": \"[219, 112, 147]\"\r\n    },\r\n    {\r\n        \"group\": \"pink\",\r\n        \"hex\": \"#FF1493\",\r\n        \"name\": \"DeepPink\",\r\n        \"rgb\": \"[255, 20, 147]\"\r\n    },\r\n    {\r\n        \"group\": \"pink\",\r\n        \"hex\": \"#FF69B4\",\r\n        \"name\": \"HotPink\",\r\n        \"rgb\": \"[255, 105, 180]\"\r\n    },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#FF00FF\",\r\n        \"name\": \"Fuchsia\",\r\n        \"rgb\": \"[255, 0, 255]\"\r\n    },\r\n    // {\r\n    //     \"group\": \"purple\",\r\n    //     \"hex\": \"#7B68EE\",\r\n    //     \"name\": \"MediumSlateBlue\",\r\n    //     \"rgb\": \"[123, 104, 238]\"\r\n    // },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#483D8B\",\r\n        \"name\": \"DarkSlateBlue\",\r\n        \"rgb\": \"[72, 61, 139]\"\r\n    },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#6A5ACD\",\r\n        \"name\": \"SlateBlue\",\r\n        \"rgb\": \"[106, 90, 205]\"\r\n    },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#4B0082\",\r\n        \"name\": \"Indigo\",\r\n        \"rgb\": \"[75, 0, 130]\"\r\n    },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#800080\",\r\n        \"name\": \"Purple\",\r\n        \"rgb\": \"[128, 0, 128]\"\r\n    },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#8B008B\",\r\n        \"name\": \"DarkMagenta\",\r\n        \"rgb\": \"[139, 0, 139]\"\r\n    },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#9932CC\",\r\n        \"name\": \"DarkOrchid\",\r\n        \"rgb\": \"[153, 50, 204]\"\r\n    },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#9400D3\",\r\n        \"name\": \"DarkViolet\",\r\n        \"rgb\": \"[148, 0, 211]\"\r\n    },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#8A2BE2\",\r\n        \"name\": \"BlueViolet\",\r\n        \"rgb\": \"[138, 43, 226]\"\r\n    },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#663399\",\r\n        \"name\": \"RebeccaPurple\",\r\n        \"rgb\": \"[102, 51, 153]\"\r\n    },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#9370DB\",\r\n        \"name\": \"MediumPurple\",\r\n        \"rgb\": \"[147, 112, 219]\"\r\n    },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#FF00FF\",\r\n        \"name\": \"Magenta\",\r\n        \"rgb\": \"[255, 0, 255]\"\r\n    },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#DA70D6\",\r\n        \"name\": \"Orchid\",\r\n        \"rgb\": \"[218, 112, 214]\"\r\n    },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#E6E6FA\",\r\n        \"name\": \"Lavender\",\r\n        \"rgb\": \"[230, 230, 250]\"\r\n    },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#D8BFD8\",\r\n        \"name\": \"Thistle\",\r\n        \"rgb\": \"[216, 191, 216]\"\r\n    },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#DDA0DD\",\r\n        \"name\": \"Plum\",\r\n        \"rgb\": \"[221, 160, 221]\"\r\n    },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#EE82EE\",\r\n        \"name\": \"Violet\",\r\n        \"rgb\": \"[238, 130, 238]\"\r\n    },\r\n    {\r\n        \"group\": \"purple\",\r\n        \"hex\": \"#BA55D3\",\r\n        \"name\": \"MediumOrchid\",\r\n        \"rgb\": \"[186, 85, 211]\"\r\n    },\r\n    {\r\n        \"group\": \"red\",\r\n        \"hex\": \"#FF0000\",\r\n        \"name\": \"Red\",\r\n        \"rgb\": \"[255, 0, 0]\"\r\n    },\r\n    {\r\n        \"group\": \"red\",\r\n        \"hex\": \"#DC143C\",\r\n        \"name\": \"Crimson\",\r\n        \"rgb\": \"[220, 20, 60]\"\r\n    },\r\n    {\r\n        \"group\": \"red\",\r\n        \"hex\": \"#FFA07A\",\r\n        \"name\": \"LightSalmon\",\r\n        \"rgb\": \"[255, 160, 122]\"\r\n    },\r\n    {\r\n        \"group\": \"red\",\r\n        \"hex\": \"#E9967A\",\r\n        \"name\": \"DarkSalmon\",\r\n        \"rgb\": \"[233, 150, 122]\"\r\n    },\r\n    {\r\n        \"group\": \"red\",\r\n        \"hex\": \"#FA8072\",\r\n        \"name\": \"Salmon\",\r\n        \"rgb\": \"[250, 128, 114]\"\r\n    },\r\n    {\r\n        \"group\": \"red\",\r\n        \"hex\": \"#F08080\",\r\n        \"name\": \"LightCoral\",\r\n        \"rgb\": \"[240, 128, 128]\"\r\n    },\r\n    {\r\n        \"group\": \"red\",\r\n        \"hex\": \"#B22222\",\r\n        \"name\": \"FireBrick\",\r\n        \"rgb\": \"[178, 34, 34]\"\r\n    },\r\n    {\r\n        \"group\": \"red\",\r\n        \"hex\": \"#8B0000\",\r\n        \"name\": \"DarkRed\",\r\n        \"rgb\": \"[139, 0, 0]\"\r\n    },\r\n    {\r\n        \"group\": \"red\",\r\n        \"hex\": \"#CD5C5C\",\r\n        \"name\": \"IndianRed\",\r\n        \"rgb\": \"[205, 92, 92]\"\r\n    },\r\n    {\r\n        \"group\": \"white\",\r\n        \"hex\": \"#FFFFF0\",\r\n        \"name\": \"Ivory\",\r\n        \"rgb\": \"[255, 255, 240]\"\r\n    },\r\n    {\r\n        \"group\": \"white\",\r\n        \"hex\": \"#FFE4E1\",\r\n        \"name\": \"MistyRose\",\r\n        \"rgb\": \"[255, 228, 225]\"\r\n    },\r\n    {\r\n        \"group\": \"white\",\r\n        \"hex\": \"#FFF0F5\",\r\n        \"name\": \"LavenderBlush\",\r\n        \"rgb\": \"[255, 240, 245]\"\r\n    },\r\n    {\r\n        \"group\": \"white\",\r\n        \"hex\": \"#FAF0E6\",\r\n        \"name\": \"Linen\",\r\n        \"rgb\": \"[250, 240, 230]\"\r\n    },\r\n    {\r\n        \"group\": \"white\",\r\n        \"hex\": \"#FAEBD7\",\r\n        \"name\": \"AntiqueWhite\",\r\n        \"rgb\": \"[250, 235, 215]\"\r\n    },\r\n    {\r\n        \"group\": \"white\",\r\n        \"hex\": \"#FFFAF0\",\r\n        \"name\": \"FloralWhite\",\r\n        \"rgb\": \"[255, 250, 240]\"\r\n    },\r\n    {\r\n        \"group\": \"white\",\r\n        \"hex\": \"#FDF5E6\",\r\n        \"name\": \"OldLace\",\r\n        \"rgb\": \"[253, 245, 230]\"\r\n    },\r\n    {\r\n        \"group\": \"white\",\r\n        \"hex\": \"#FFF5EE\",\r\n        \"name\": \"SeaShell\",\r\n        \"rgb\": \"[255, 245, 238]\"\r\n    },\r\n    {\r\n        \"group\": \"white\",\r\n        \"hex\": \"#F5F5DC\",\r\n        \"name\": \"Beige\",\r\n        \"rgb\": \"[245, 245, 220]\"\r\n    },\r\n    {\r\n        \"group\": \"white\",\r\n        \"hex\": \"#F8F8FF\",\r\n        \"name\": \"GhostWhite\",\r\n        \"rgb\": \"[248, 248, 255]\"\r\n    },\r\n    {\r\n        \"group\": \"white\",\r\n        \"hex\": \"#F0F8FF\",\r\n        \"name\": \"AliceBlue\",\r\n        \"rgb\": \"[240, 248, 255]\"\r\n    },\r\n    {\r\n        \"group\": \"white\",\r\n        \"hex\": \"#F0FFFF\",\r\n        \"name\": \"Azure\",\r\n        \"rgb\": \"[240, 255, 255]\"\r\n    },\r\n    {\r\n        \"group\": \"white\",\r\n        \"hex\": \"#F5FFFA\",\r\n        \"name\": \"MintCream\",\r\n        \"rgb\": \"[245, 255, 250]\"\r\n    },\r\n    {\r\n        \"group\": \"white\",\r\n        \"hex\": \"#F0FFF0\",\r\n        \"name\": \"HoneyDew\",\r\n        \"rgb\": \"[240, 255, 240]\"\r\n    },\r\n    {\r\n        \"group\": \"white\",\r\n        \"hex\": \"#FFFAFA\",\r\n        \"name\": \"Snow\",\r\n        \"rgb\": \"[255, 250, 250]\"\r\n    },\r\n    {\r\n        \"group\": \"white\",\r\n        \"hex\": \"#FFFFFF\",\r\n        \"name\": \"White\",\r\n        \"rgb\": \"[255, 255, 255]\"\r\n    },\r\n    {\r\n        \"group\": \"white\",\r\n        \"hex\": \"#F5F5F5\",\r\n        \"name\": \"WhiteSmoke\",\r\n        \"rgb\": \"[245, 245, 245]\"\r\n    },\r\n    {\r\n        \"group\": \"yellow\",\r\n        \"hex\": \"#EEE8AA\",\r\n        \"name\": \"PaleGoldenrod\",\r\n        \"rgb\": \"[238, 232, 170]\"\r\n    },\r\n    {\r\n        \"group\": \"yellow\",\r\n        \"hex\": \"#BDB76B\",\r\n        \"name\": \"DarkKhaki\",\r\n        \"rgb\": \"[189, 183, 107]\"\r\n    },\r\n    {\r\n        \"group\": \"yellow\",\r\n        \"hex\": \"#F0E68C\",\r\n        \"name\": \"Khaki\",\r\n        \"rgb\": \"[240, 230, 140]\"\r\n    },\r\n    {\r\n        \"group\": \"yellow\",\r\n        \"hex\": \"#FFDAB9\",\r\n        \"name\": \"PeachPuff\",\r\n        \"rgb\": \"[255, 218, 185]\"\r\n    },\r\n    {\r\n        \"group\": \"yellow\",\r\n        \"hex\": \"#FFFFE0\",\r\n        \"name\": \"LightYellow\",\r\n        \"rgb\": \"[255, 255, 224]\"\r\n    },\r\n    {\r\n        \"group\": \"yellow\",\r\n        \"hex\": \"#FFEFD5\",\r\n        \"name\": \"PapayaWhip\",\r\n        \"rgb\": \"[255, 239, 213]\"\r\n    },\r\n    {\r\n        \"group\": \"yellow\",\r\n        \"hex\": \"#FAFAD2\",\r\n        \"name\": \"LightGoldenrodYellow\",\r\n        \"rgb\": \"[250, 250, 210]\"\r\n    },\r\n    {\r\n        \"group\": \"yellow\",\r\n        \"hex\": \"#FFFACD\",\r\n        \"name\": \"LemonChiffon\",\r\n        \"rgb\": \"[255, 250, 205]\"\r\n    },\r\n    {\r\n        \"group\": \"yellow\",\r\n        \"hex\": \"#FFD700\",\r\n        \"name\": \"Gold\",\r\n        \"rgb\": \"[255, 215, 0]\"\r\n    },\r\n    {\r\n        \"group\": \"yellow\",\r\n        \"hex\": \"#FFE4B5\",\r\n        \"name\": \"Moccasin\",\r\n        \"rgb\": \"[255, 228, 181]\"\r\n    },\r\n    {\r\n        \"group\": \"yellow\",\r\n        \"hex\": \"#FFFF00\",\r\n        \"name\": \"Yellow\",\r\n        \"rgb\": \"[255, 255, 0]\"\r\n    }\r\n];\r\n\r\nexport default COLORS_LIST;","import COLORS_LIST from './shared/colors_list';\r\nimport { sorted_unique, rgb_to_brightness, sort_LOD_by_key } from './misc_functions';\r\n\r\nexport const isColorProperty = id_prop_name => id_prop_name && id_prop_name.toLowerCase().endsWith('color');\r\nexport const isFontFamilyProperty = id_prop_name => id_prop_name && id_prop_name.endsWith('_fontFamily');\r\n\r\nexport const getColorsData = () => {\r\n    /*  colors_list = flat list of all colours, unsorted\r\n        colorsDOL = dictionary of colour groups, with colour group name as keys. Each colour group's colours are sorted by brightness\r\n        colorNamesList = flat list of colour names, ordered by group\r\n        color_groups_unique = unique list of colour groups\r\n    */\r\n    const colors_list = COLORS_LIST;\r\n    const colorsDOL = {};\r\n    const groups_list = colors_list.map(x => x['group']);\r\n    const groups_unique = sorted_unique(groups_list);\r\n    groups_unique.forEach(x => colorsDOL[x] = []);\r\n    colors_list.forEach(x => {\r\n        x['brightness'] = rgb_to_brightness(x['rgb']);\r\n        colorsDOL[x['group']].push(x);\r\n    });\r\n    groups_unique.forEach(group_name => {\r\n        colorsDOL[group_name] = sort_LOD_by_key(colorsDOL[group_name], 'brightness', true);\r\n    });\r\n    const colorNamesList = [];\r\n    groups_unique.forEach(group_name => {\r\n        colorsDOL[group_name].forEach(x => colorNamesList.push(x['name']));\r\n    });\r\n    return {\r\n        colors_list: colors_list,\r\n        colorsDOL,\r\n        colorNamesList,\r\n        color_groups_unique: groups_unique\r\n    };\r\n}\r\n\r\n\r\nexport const scrollToElement = (element, containerSelector, rowHeight, prevOffsetTop) => {\r\n    // element.getBoundingClientRect() returns the rect dimensions irrespective of whether the rect is visible or not.\r\n    // When the element is visible the top and/or bottom rect dimensions will be within the container rect's dimensions. \r\n    // Calculate direction by comparing the element.offsetTop with the previously-stored element.offsetTop value.\r\n    const element_bounding_rect = element.getBoundingClientRect();\r\n    const element_top = element_bounding_rect.top;\r\n    const element_bottom = element_top + element_bounding_rect.height;\r\n    const direction = element.offsetTop - prevOffsetTop;\r\n    const container = document.querySelector(containerSelector);\r\n    const container_bounding_rect = container.getBoundingClientRect();\r\n    const container_top = container_bounding_rect.top;\r\n    const container_height = container_bounding_rect.height;\r\n    const container_bottom = container_top + container_height;       \r\n\r\n    if (direction === 0) {\r\n        return element.offsetTop;\r\n    }\r\n    else if (element_top + 0.75 * rowHeight >= container_bottom) {\r\n        element.scrollIntoView(false);  // scroll down\r\n    }\r\n    else if (element_bottom - 0.75 * rowHeight <= container_top) {\r\n        element.scrollIntoView(true);   // scroll up     \r\n    }\r\n    return element.offsetTop;\r\n}","\r\nexport function sorted_unique(arr) {\r\n    const set_var = new Set();\r\n    arr.map(x => set_var.add(x));\r\n    return [...set_var].sort();\r\n}\r\n\r\n\r\nexport function rgb_to_brightness(rgb) {\r\n    /* returns a number between 0 to 255, \r\n    where a lower figure = lower brightness & vice versa\r\n    Input: rgb = array \r\n    https://stackoverflow.com/questions/596216/formula-to-determine-brightness-of-rgb-color\r\n    */\r\n   if(typeof rgb === 'string') {\r\n       rgb = JSON.parse(rgb);\r\n   }\r\n    return parseInt(Math.sqrt(\r\n        rgb[0] * rgb[0] * .299 + \r\n        rgb[1] * rgb[1] * .587 + \r\n        rgb[2] * rgb[2] * .114));\r\n}\r\n\r\n\r\nexport function sort_LOD_by_key(arr, key, reverse=false) {\r\n    const arr2 = [...arr];\r\n    arr2.sort(function(a, b) {\r\n        if (a[key] < b[key]) return -1;\r\n        if (a[key] > b[key]) return 1;\r\n        return 0;\r\n    });\r\n    if (reverse === true) \r\n        arr2.reverse();\r\n    return arr2;\r\n}\r\n\r\n\r\nexport function capitalize_string(s) {\r\n    if (typeof s !== 'string') \r\n        return '';\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n}\r\n\r\nexport function get_windows10_fonts() {\r\n    return  [\r\n        'Arial',\r\n        'Arial Black',\r\n        'Bahnschrift',\r\n        'Calibri',\r\n        'Cambria',\r\n        'Cambria Math',\r\n        'Candara',\r\n        'Comic Sans MS',\r\n        'Consolas',\r\n        'Constantia',\r\n        'Corbel',\r\n        'Courier New',\r\n        'Ebrima',\r\n        'Franklin Gothic Medium',\r\n        'Gabriola',\r\n        'Gadugi',\r\n        'Georgia',\r\n        'HoloLens MDL2 Assets',\r\n        'Impact',\r\n        'Ink Free',\r\n        'Javanese Text',\r\n        'Leelawadee UI',\r\n        'Lucida Console',\r\n        'Lucida Sans Unicode',\r\n        'Malgun Gothic',\r\n        'Marlett',\r\n        'Microsoft Himalaya',\r\n        'Microsoft JhengHei',\r\n        'Microsoft New Tai Lue',\r\n        'Microsoft PhagsPa',\r\n        'Microsoft Sans Serif',\r\n        'Microsoft Tai Le',\r\n        'Microsoft YaHei',\r\n        'Microsoft Yi Baiti',\r\n        'MingLiU-ExtB',\r\n        'Mongolian Baiti',\r\n        'MS Gothic',\r\n        'MV Boli',\r\n        'Myanmar Text',\r\n        'Nirmala UI',\r\n        'Palatino Linotype',\r\n        'Segoe MDL2 Assets',\r\n        'Segoe Print',\r\n        'Segoe Script',\r\n        'Segoe UI',\r\n        'Segoe UI Historic',\r\n        'Segoe UI Emoji',\r\n        'Segoe UI Symbol',\r\n        'SimSun',\r\n        'Sitka',\r\n        'Sylfaen',\r\n        'Symbol',\r\n        'Tahoma',\r\n        'Times New Roman',\r\n        'Trebuchet MS',\r\n        'Verdana',\r\n        'Webdings',\r\n        'Wingdings',\r\n        'Yu Gothic',\r\n    ];\r\n}\r\n\r\n\r\nexport function get_google_fonts() {\r\n    return  [\r\n        'Source Sans Pro',\r\n        'Open Sans',\r\n        'Raleway',\r\n        'Roboto',\r\n        'Lato',\r\n        'Montserrat',\r\n        'Noto Serif',\r\n        'Noto Sans JP',\r\n        'Rubik',\r\n        'Permanent marker',\r\n        'Nunito',\r\n        'Cabin',\r\n        'Ubuntu',\r\n    ];\r\n}\r\n\r\n\r\nexport function get_windows10_and_google_fonts() {\r\n    const windows_fonts = get_windows10_fonts();\r\n    const google_fonts = get_google_fonts();\r\n    return windows_fonts.concat(google_fonts).sort();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import * as ActionTypes from './actionTypes';\r\nimport { getColorsData } from '../misc_app_specific_fns';\r\nimport { get_windows10_and_google_fonts } from '../misc_functions';\r\n\r\n\r\nexport const loadColorsDataAC = () => {\r\n    return {\r\n        type: ActionTypes.LOAD_COLORS_DATA,\r\n        payload: getColorsData()\r\n    };\r\n}\r\n\r\nexport const loadFontFamiliesAC = () => {\r\n    return {\r\n        type: ActionTypes.LOAD_FONT_FAMILIES,\r\n        payload: get_windows10_and_google_fonts()\r\n    };\r\n}\r\n\r\nexport const updateCssPropertyValueAC = (id_prop, value) => {\r\n    return {\r\n        type: ActionTypes.UPDATE_CSS_PROPERTY_VALUE,\r\n        payload: {\r\n            id_prop: id_prop,\r\n            value: value\r\n        }\r\n    };\r\n}\r\n\r\nexport const setIdPropSelectedAC = (id_prop) => {\r\n    return {\r\n        type: ActionTypes.SET_ID_PROP_SELECTED,\r\n        payload: id_prop\r\n    };\r\n}\r\n\r\nexport const setPropertyTypeAC = (prop_type) => {\r\n    return {\r\n        type: ActionTypes.SET_PROPERTY_TYPE,\r\n        payload: prop_type\r\n    };\r\n}\r\n\r\nexport const setMainColumnsHeightAC = (height) => {\r\n    return {\r\n        type: ActionTypes.SET_MAIN_COLUMNS_HEIGHT,\r\n        payload: height\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateCssPropertyValueAC, setIdPropSelectedAC, setPropertyTypeAC } from '../redux/actionCreators';\r\nimport { isColorProperty, isFontFamilyProperty } from '../misc_app_specific_fns';\r\nimport '../css/CssForm.css';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cssProperties: state.cssProperties,\r\n        id_prop_selected: state.id_prop_selected,\r\n        fontFamilies: state.fontFamilies,\r\n        colorNamesList: state.colorNamesList,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCssPropertyValue: (id_prop, value) => dispatch(updateCssPropertyValueAC(id_prop, value)),\r\n        setIdPropSelected: id_prop => dispatch(setIdPropSelectedAC(id_prop)),\r\n        setPropertyType: property_type => dispatch(setPropertyTypeAC(property_type)),\r\n    };\r\n}\r\n\r\nclass CssForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id_prop_name: undefined,\r\n        }\r\n    }\r\n\r\n    handleCssFocusChange = (e) => { \r\n        this.change_selected_cells_styles(e.target.name);\r\n        const id_prop_name = e.target.name;\r\n\r\n        let property_type;\r\n        if (isColorProperty(id_prop_name)) {\r\n            property_type = 'colors';\r\n        } \r\n        else if (isFontFamilyProperty(id_prop_name)) {\r\n            property_type = 'fontsList';\r\n        }\r\n        else {\r\n            property_type = 'otherInput';\r\n        }\r\n        this.props.setPropertyType(property_type);\r\n        this.props.setIdPropSelected(id_prop_name);\r\n    }\r\n\r\n    handleCssKeyDown = e => {\r\n        const keyValue = e.key;\r\n        function get_next_value(arr, text, keyValue) {\r\n            const currIndex = arr.map(x => x.toLowerCase()).indexOf(text.toLowerCase());\r\n            let newVal;\r\n            if(keyValue === 'ArrowUp') {\r\n                newVal = currIndex - 1 >= 0 ? arr[currIndex - 1] : arr[0];\r\n            }\r\n            else if (keyValue === 'ArrowDown') {\r\n                newVal = currIndex + 1 < arr.length ? arr[currIndex + 1] : arr[arr.length-1];\r\n            }\r\n            return newVal;\r\n        }\r\n        const currPropText = this.props.cssProperties[this.props.id_prop_selected];\r\n        \r\n        if (keyValue === 'ArrowUp' || keyValue === 'ArrowDown') {\r\n            if(isColorProperty(this.props.id_prop_selected)) {\r\n                const colorNamesList = this.props.colorNamesList;\r\n                const newColor = get_next_value(colorNamesList, currPropText, keyValue);\r\n                this.props.updateCssPropertyValue(this.props.id_prop_selected, newColor);\r\n            }\r\n            else if (isFontFamilyProperty(this.props.id_prop_selected)) {\r\n                const fontFamilies = this.props.fontFamilies;\r\n                const newFont = get_next_value(fontFamilies, currPropText, keyValue);               \r\n                this.props.updateCssPropertyValue(this.props.id_prop_selected, newFont);\r\n            }\r\n            else if(this.props.id_prop_selected.endsWith('fontSize')) {\r\n                let currFontSize = parseInt(currPropText.replace('px', ''));\r\n                if (!Number.isInteger(currFontSize)) {\r\n                    currFontSize = 1;\r\n                }\r\n                let newFontSize = keyValue === 'ArrowUp' ? currFontSize + 1 : currFontSize - 1;\r\n                if (newFontSize < 0) {\r\n                    newFontSize = 0;\r\n                }\r\n                else if (newFontSize > 50) {\r\n                    newFontSize = 50;\r\n                }\r\n                const newFontSizeText = `${newFontSize}px`;\r\n                this.props.updateCssPropertyValue(this.props.id_prop_selected, newFontSizeText);\r\n            }\r\n            else if(this.props.id_prop_selected.endsWith('fontWeight')) {\r\n                const currFontWeight = parseInt(currPropText);\r\n                const FONT_WEIGHT_MIN = 100;\r\n                const FONT_WEIGHT_MAX = 900;\r\n                const step_size = 100;\r\n                let newFontWeight\r\n                if (keyValue === 'ArrowUp') {\r\n                    newFontWeight = currFontWeight + step_size <= FONT_WEIGHT_MAX ? currFontWeight + step_size : FONT_WEIGHT_MAX;\r\n                }\r\n                else if (keyValue === 'ArrowDown') {\r\n                    newFontWeight = currFontWeight - step_size >= FONT_WEIGHT_MIN ? currFontWeight - step_size : FONT_WEIGHT_MIN;\r\n                } \r\n                this.props.updateCssPropertyValue(this.props.id_prop_selected, newFontWeight);        \r\n            }\r\n            else if(this.props.id_prop_selected.endsWith('lineHeight')) {\r\n                const currLineHeight = Number(parseFloat(currPropText).toFixed(2));\r\n                const LINE_HEIGHT_MIN = 0.5;\r\n                const LINE_HEIGHT_MAX = 3.0;\r\n                const step_size = 0.1;\r\n                let newLineHeight;\r\n                if (keyValue === 'ArrowUp') {\r\n                    newLineHeight = currLineHeight + step_size <= LINE_HEIGHT_MAX ? currLineHeight + step_size : LINE_HEIGHT_MAX;\r\n                }\r\n                else if (keyValue === 'ArrowDown') {\r\n                    newLineHeight = currLineHeight - step_size >= LINE_HEIGHT_MIN ? currLineHeight - step_size : LINE_HEIGHT_MIN;\r\n                } \r\n                this.props.updateCssPropertyValue(this.props.id_prop_selected, newLineHeight.toFixed(2));        \r\n            }\r\n        }\r\n        else {\r\n            this.props.updateCssPropertyValue(this.props.id_prop_selected, currPropText); \r\n        }\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    change_selected_cells_styles(curr_selected_id_prop) {\r\n        Object.keys(this.props.cssProperties).forEach(id_prop => {\r\n            const el = document.getElementById(id_prop);\r\n            if (el !== null) {\r\n                el.style.border = 'none';\r\n                el.style.backgroundColor = 'white';\r\n            }\r\n        });\r\n        const curr_selected = document.getElementById(curr_selected_id_prop);\r\n        if (document.activeElement === curr_selected) {\r\n            curr_selected.style.border = '2px solid magenta';\r\n            curr_selected.style.backgroundColor = 'azure';\r\n        }\r\n    }\r\n\r\n    create_input_css_property_rows() {\r\n        const css_properties_list = Object.keys(this.props.cssProperties);\r\n        const rows = css_properties_list.map(id_prop => {\r\n            const element_property = id_prop.split('_');\r\n            return (\r\n                <tr key={id_prop}>\r\n                    <td className=\"td_col1\">\r\n                        { element_property[0] }\r\n                    </td>\r\n                    <td className=\"td_col2\">\r\n                        { element_property[1] }\r\n                    </td>\r\n                    <td className=\"td_col3\">\r\n                        <input \r\n                            type=\"text\"\r\n                            name={id_prop} \r\n                            id={id_prop} \r\n                            className=\"id_prop_input\"\r\n                            onKeyDown={this.handleCssKeyDown}\r\n                            onFocus={this.handleCssFocusChange} \r\n                            value={this.props.cssProperties[id_prop]} \r\n                            autoComplete=\"off\"\r\n                            spellCheck=\"false\" \r\n                            readOnly\r\n                        /> \r\n                    </td>\r\n                </tr>\r\n            )\r\n        });\r\n        return rows;\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"css-form-container\">\r\n                <form>\r\n                    <table>\r\n                        <tbody>{ this.create_input_css_property_rows() }</tbody>\r\n                    </table>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(CssForm);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport '../css/Display.css';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cssProperties: state.cssProperties,\r\n    };\r\n}\r\n\r\n\r\nfunction Display(props) {\r\n    let logo_styles = {};\r\n    let navbar_styles = {};\r\n    let title_styles = {};\r\n    let p_styles = {};\r\n    if (props.cssProperties !== undefined) { \r\n        logo_styles = {\r\n            fontFamily: props.cssProperties.logo_fontFamily,\r\n            fontSize: props.cssProperties.logo_fontSize,\r\n            fontWeight: props.cssProperties.logo_fontWeight,\r\n            color: props.cssProperties.logo_color,\r\n            padding: props.cssProperties.logo_padding,\r\n            margin: props.cssProperties.logo_margin, \r\n        };\r\n\r\n        navbar_styles = {\r\n            backgroundColor: props.cssProperties.navbar_backgroundColor,\r\n        };\r\n\r\n        title_styles = {\r\n            fontFamily: props.cssProperties.title_fontFamily,\r\n            fontSize: props.cssProperties.title_fontSize,\r\n            fontWeight: props.cssProperties.title_fontWeight,\r\n            color: props.cssProperties.title_color,\r\n            padding: props.cssProperties.title_padding,\r\n            margin: props.cssProperties.title_margin,\r\n        }\r\n\r\n        p_styles = {\r\n            fontFamily: props.cssProperties.p_fontFamily,\r\n            fontSize: props.cssProperties.p_fontSize,\r\n            fontWeight: props.cssProperties.p_fontWeight,\r\n            color: props.cssProperties.p_color,\r\n            padding: props.cssProperties.p_padding,\r\n            margin: props.cssProperties.p_margin,\r\n            lineHeight: props.cssProperties.p_lineHeight,\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"display-container\">\r\n            <div id=\"container\">\r\n                <div id=\"navbar\" style={navbar_styles}>\r\n                        <h1 id=\"logo\" style={logo_styles}>\r\n                            { props.cssProperties?.logo_text }\r\n                        </h1>\r\n                    </div>\r\n                    <div>\r\n                        <article id=\"article\">\r\n                            <h3 id=\"h3\" style={title_styles}>Random title</h3>\r\n                            <p id=\"p1\" style={p_styles}>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc volutpat pulvinar purus, vitae porttitor mauris pretium luctus. Donec vel turpis quis ante dapibus vulputate sit amet quis sapien. Nulla hendrerit iaculis pellentesque. Pellentesque vel sem tellus. Vestibulum consequat accumsan leo. Aliquam congue ornare sapien, nec tempus tortor tristique vitae. Aliquam ultricies nibh in dolor tempus interdum sed ut nisi. Cras nec ligula congue, viverra purus eget, auctor justo. Fusce ut turpis luctus, luctus erat et, suscipit felis. Aenean eget orci odio. Vivamus consectetur non odio vel placerat.</p>\r\n                            <h4 id=\"h4\" style={title_styles}>Another title</h4>\r\n                            <p id=\"p2\" style={p_styles}>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc volutpat pulvinar purus, vitae porttitor mauris pretium luctus. Donec vel turpis quis ante dapibus vulputate sit amet quis sapien. Nulla hendrerit iaculis pellentesque. Pellentesque vel sem tellus. Vestibulum consequat accumsan leo. Aliquam congue ornare sapien, nec tempus tortor tristique vitae. Aliquam ultricies nibh in dolor.</p>\r\n                        </article>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps)(Display);","import React, { Component } from 'react';\r\nimport { isColorProperty, scrollToElement } from '../misc_app_specific_fns';\r\nimport { connect } from 'react-redux';\r\nimport { updateCssPropertyValueAC } from '../redux/actionCreators';\r\nimport '../css/Colors.css';\r\n\r\nconst ROW_HEIGHT = 43;\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        colorsDOL: state.colorsDOL,\r\n        color_groups_unique: state.color_groups_unique,\r\n        id_prop_selected: state.id_prop_selected,\r\n        cssProperties: state.cssProperties\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCssPropertyValue: (id_prop, value) => dispatch(updateCssPropertyValueAC(id_prop, value)),\r\n    };\r\n}\r\n\r\nclass Colors extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedColor: undefined,\r\n            prevOffsetTop: undefined\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.cssProperties && isColorProperty(this.props.id_prop_selected))\r\n            this.highlightSelectedColor(this.props.cssProperties[this.props.id_prop_selected]);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n            if (isColorProperty(this.props.id_prop_selected))\r\n                this.highlightSelectedColor(this.props.cssProperties[this.props.id_prop_selected]);\r\n        }\r\n    }\r\n\r\n    handleColorClick = (colorName) => {\r\n        if(this.props.id_prop_selected && isColorProperty(this.props.id_prop_selected)) {\r\n            this.props.updateCssPropertyValue(this.props.id_prop_selected, colorName);\r\n            this.highlightSelectedColor(colorName);\r\n        }\r\n    }\r\n\r\n    highlightSelectedColor(colorName) {\r\n        const curr_selected_color = this.state.selectedColor;\r\n        if (curr_selected_color) {\r\n            const element = document.querySelector(`[data-color-name='${curr_selected_color}']`);\r\n            element.style.boxShadow = 'none';\r\n        }\r\n        this.setState({\r\n            selectedColor: colorName\r\n        }, () => {\r\n            const element = document.querySelector(`[data-color-name='${colorName}']`);\r\n            element.style.boxShadow = '0 0 4px 4px magenta';\r\n            const prevOffsetTop = scrollToElement(element, '.colors-container', ROW_HEIGHT, this.state.prevOffsetTop);\r\n            this.setState({\r\n                prevOffsetTop: prevOffsetTop\r\n            });\r\n        });\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    colorsForColourGroup = (group_colors) => {\r\n        const color_cells = group_colors.map((x, i) => {\r\n            const bgColor = x['hex'];\r\n            const colorName = x['name']\r\n            const textColor = x['brightness'] < 180 ? 'white' : 'black';\r\n            return (\r\n                <span \r\n                    key={i} \r\n                    className=\"color-div\" \r\n                    data-color-name={colorName}\r\n                    style={{ backgroundColor: bgColor, color: textColor }}\r\n                    onClick={() => this.handleColorClick(colorName)}    \r\n                >\r\n                    { x['name'] }\r\n                </span>\r\n            );\r\n        });\r\n        return color_cells;\r\n    }\r\n\r\n    render() {\r\n        const colorsDOL = this.props.colorsDOL;\r\n        const colors_JSX = this.props.color_groups_unique.map(group_name => {\r\n            return (\r\n                <div className=\"color-group-div\" key={group_name}>\r\n                    { this.colorsForColourGroup(colorsDOL[group_name]) }\r\n                </div>\r\n            );\r\n        });        \r\n\r\n        return (\r\n            <div className=\"colors-container\">\r\n                <>\r\n                    { colors_JSX }\r\n                </>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Colors);","import React, { Component } from 'react';\r\nimport { isFontFamilyProperty, scrollToElement } from '../misc_app_specific_fns';\r\nimport { connect } from 'react-redux';\r\nimport { updateCssPropertyValueAC } from '../redux/actionCreators';\r\nimport '../css/FontsList.css';\r\n\r\nconst ROW_HEIGHT = 40;\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        fontFamilies: state.fontFamilies,\r\n        id_prop_selected: state.id_prop_selected,\r\n        cssProperties: state.cssProperties\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCssPropertyValue: (id_prop, value) => dispatch(updateCssPropertyValueAC(id_prop, value)),\r\n    };\r\n}\r\n\r\n\r\nclass FontsList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedFont: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.cssProperties && this.props.id_prop_selected && isFontFamilyProperty(this.props.id_prop_selected))\r\n            this.highlightSelectedFont(this.props.cssProperties[this.props.id_prop_selected]);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n            if (this.props.id_prop_selected && isFontFamilyProperty(this.props.id_prop_selected))\r\n                this.highlightSelectedFont(this.props.cssProperties[this.props.id_prop_selected]);\r\n        }\r\n    }\r\n\r\n    handleFontClick = fontName => {\r\n        if(isFontFamilyProperty(this.props.id_prop_selected)) {\r\n            this.props.updateCssPropertyValue(this.props.id_prop_selected, fontName);\r\n            this.highlightSelectedFont(fontName);\r\n        }\r\n    }\r\n\r\n    highlightSelectedFont(fontName, centred) {\r\n        const curr_selected_font = this.state.selectedFont;\r\n        if (curr_selected_font) {\r\n            const element = document.querySelector(`[data-font-name='${curr_selected_font}']`);\r\n            element.style.border = '1px solid lightgrey';\r\n        }\r\n\r\n        this.setState({\r\n            selectedFont: fontName\r\n        }, () => {\r\n            const element = document.querySelector(`[data-font-name='${fontName}']`);\r\n            element.style.border = '2px solid magenta';  \r\n            const prevScrollTo = scrollToElement(element, '.fonts-list-outer-container', ROW_HEIGHT, this.state.prevScrollTo);  \r\n            this.setState({\r\n                prevScrollTo\r\n            });   \r\n        })\r\n    }\r\n\r\n    calc_container_height = () => {\r\n        const container = document.querySelector('.fonts-list-inner-container');\r\n        const font = document.querySelector('.span-font');\r\n        if (!container || !font) {\r\n            return null;\r\n        }\r\n        const container_width = container.clientWidth;\r\n        const font_width = font.getBoundingClientRect().width;\r\n        const Ncols = Math.floor(container_width / font_width);\r\n        const container_height = (this.props.fontFamilies.length / Ncols) * 36;\r\n        return `${container_height}px`;\r\n    }\r\n\r\n    render() { \r\n        const rows = this.props.fontFamilies.map(font => {\r\n            return (\r\n                <span \r\n                    key={font} \r\n                    id={font}\r\n                    className=\"span-font\" \r\n                    data-font-name={font}\r\n                    style={{ fontFamily: font}} \r\n                    onClick={() => this.handleFontClick(font)}\r\n                >\r\n                    { font }\r\n                </span>\r\n            );\r\n        });\r\n\r\n        return ( \r\n            <div className=\"fonts-list-outer-container\">\r\n                <div className=\"fonts-list-inner-container\" style={{ height: this.calc_container_height() }}>\r\n                    { rows }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(FontsList);","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateCssPropertyValueAC } from '../redux/actionCreators';\r\nimport '../css/InputContainer.css';\r\n\r\nconst MAX_FONT_SIZE = 50;\r\nconst MAX_FONT_WEIGHT = 900;\r\nconst MAX_LINE_HEIGHT = 3;\r\nconst MAX_PADDING_MARGIN_SIZE = 100;\r\n\r\nconst InputContainer = () => {\r\n    const [stateVal, setState] = useState();\r\n    const id_prop_selected = useSelector(state => state.id_prop_selected);\r\n    const cssProperties = useSelector(state => state.cssProperties);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (cssProperties[id_prop_selected]) {\r\n            setState(cssProperties[id_prop_selected]);\r\n        }\r\n    }, [cssProperties, id_prop_selected]);\r\n\r\n    const handleInputChange = (e) => {\r\n        let val = e.target.value;\r\n        if (id_prop_selected.endsWith('_fontSize')) {\r\n            val = `${val}px`;\r\n        }\r\n        if (id_prop_selected.endsWith('_text') && !val.match(/^[a-zA-Z0-9_ ]*$/)) {\r\n            console.log('verification failed > val', val);\r\n            return;\r\n        }\r\n        dispatch(updateCssPropertyValueAC(id_prop_selected, val));\r\n    }\r\n\r\n    const handlePaddingMarginChange = () => {     \r\n        const top_bottom_element = document.querySelector('.padding-margin-top-bottom');   \r\n        const left_right_element = document.querySelector('.padding-margin-left-right');   \r\n        const padding_margin_string = `${top_bottom_element.value}px ${left_right_element.value}px`;\r\n        dispatch(updateCssPropertyValueAC(id_prop_selected, padding_margin_string));\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    const get_padding_margin_JSX = () => {\r\n        if (!stateVal || typeof stateVal !== 'string' || !stateVal.includes('px')) {\r\n            return null;\r\n        }\r\n        let px_array = stateVal.match(/\\d{1,3}px/g);\r\n        if (!px_array) {\r\n            return null;\r\n        }\r\n        px_array = px_array.map(x => Number(x.replace('px', '')));\r\n        const class_names = ['Top-Bottom', 'Left-Right']\r\n        return (\r\n            <>\r\n                {\r\n                    px_array.map((px_string, i) => {\r\n                        const name = `padding-margin-${class_names[i].toLowerCase()}`;\r\n                        return (\r\n                            <div key={i}>\r\n                                <h4>{class_names[i]}</h4>\r\n                                <input \r\n                                    type=\"range\" \r\n                                    name={name}\r\n                                    className={name}\r\n                                    value={px_string}\r\n                                    min=\"0\"\r\n                                    max={MAX_PADDING_MARGIN_SIZE}\r\n                                    step=\"1\"\r\n                                    onChange={handlePaddingMarginChange}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </>\r\n        );\r\n    } \r\n\r\n    const get_input_JSX = () => {\r\n        if (!stateVal) {\r\n            return null;\r\n        }\r\n        if (id_prop_selected.endsWith('_fontSize') && typeof stateVal === \"string\" && stateVal.includes('px')) {\r\n            return (\r\n                <input \r\n                    type=\"range\" \r\n                    name=\"font-size-input\"\r\n                    className=\"font-size-input\"\r\n                    value={stateVal.replace('px', '')}  \r\n                    min=\"0\"\r\n                    max={MAX_FONT_SIZE}\r\n                    step=\"1\"\r\n                    onChange={handleInputChange}\r\n                />\r\n            );\r\n        } \r\n        else if (id_prop_selected.endsWith('_fontWeight')) {\r\n            return (\r\n                <input \r\n                    type=\"range\" \r\n                    name=\"font-weight-input\"\r\n                    className=\"font-weight-input\"\r\n                    value={stateVal}\r\n                    min=\"100\"\r\n                    max={MAX_FONT_WEIGHT}\r\n                    step=\"100\"\r\n                    onChange={handleInputChange}\r\n                />\r\n            );\r\n        } \r\n        else if (id_prop_selected.endsWith('_padding') || id_prop_selected.endsWith('_margin')) {\r\n            return get_padding_margin_JSX();\r\n        }\r\n        else if (id_prop_selected.endsWith('_lineHeight')) {\r\n            return (\r\n                <input \r\n                    type=\"range\" \r\n                    name=\"line-height-input\"\r\n                    className=\"line-height-input\"\r\n                    value={stateVal}\r\n                    min=\"0.5\"\r\n                    max={MAX_LINE_HEIGHT}\r\n                    step=\"0.1\"\r\n                    onChange={handleInputChange}\r\n                />\r\n            );\r\n        } \r\n        else if (id_prop_selected.endsWith('_text')) {\r\n            return (\r\n                <input \r\n                type=\"text\" \r\n                name=\"text-input\" \r\n                className=\"text-input\"\r\n                value={stateVal}\r\n                onChange={handleInputChange}\r\n              /> \r\n            );\r\n        }\r\n    }\r\n\r\n    const get_value_text = () => {\r\n        if (id_prop_selected.endsWith('_text')) {\r\n            return <div className=\"bottom-container-invisible\"></div>;\r\n        }\r\n        else if (id_prop_selected.endsWith('_fontSize')) {\r\n            return <div className=\"bottom-container\">{ stateVal }</div>;\r\n        }\r\n        else if (id_prop_selected.endsWith('_fontWeight')) {\r\n            return <div className=\"bottom-container\">{ stateVal }</div>;\r\n        } \r\n        else if (id_prop_selected.endsWith('_padding') || id_prop_selected.endsWith('_margin') || id_prop_selected.endsWith('_lineHeight')) \r\n        {\r\n            return <div className=\"bottom-container\">{ cssProperties[id_prop_selected] }</div>;\r\n        }\r\n    }\r\n\r\n    const get_container_class_name = () => {\r\n        if (id_prop_selected.includes('padding') || id_prop_selected.includes('margin')) {\r\n            return 'padding-margin-container';\r\n        }\r\n        else {\r\n            return `${id_prop_selected.split('_')[1]}-container`;\r\n        }  \r\n    }\r\n\r\n    return (  \r\n        <div className={`input-container ${get_container_class_name()}`}>\r\n            <h3>{ id_prop_selected.replace('_', ' ') }</h3>\r\n            <div className=\"top-container\">{ get_input_JSX() }</div>\r\n            { get_value_text() }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default InputContainer;","import React, { Component } from 'react';\r\nimport CssForm from './CssForm';\r\nimport Display from './Display';\r\nimport Colors from './Colors';\r\nimport FontsList from './FontsList';\r\nimport InputContainer from './InputContainer';\r\nimport { connect } from 'react-redux';\r\nimport { loadColorsDataAC, loadFontFamiliesAC, updateCssPropertyValueAC, setMainColumnsHeightAC } from '../redux/actionCreators';\r\nimport '../css/Home.css';\r\n\r\nconst RESHAPE_WIDTH = 590;\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        colors: state.colors_list,\r\n        colorsDOL: state.colorsDOL,\r\n        colorNamesList: state.colorNamesList,\r\n        fontFamilies: state.fontFamilies,\r\n        cssProperties: state.cssProperties,\r\n        property_type: state.property_type,\r\n        id_prop_selected: state.id_prop_selected,\r\n        mainColumnsHeight: state.mainColumnsHeight,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loadColorsData: () =>  dispatch(loadColorsDataAC()),\r\n        loadFontFamilies: () =>  dispatch(loadFontFamiliesAC()),\r\n        updateCssPropertyValue: (id_prop, value) => dispatch(updateCssPropertyValueAC(id_prop, value)),\r\n        setMainColumnsHeight: height => dispatch(setMainColumnsHeightAC(height)),\r\n\r\n    };\r\n}\r\n\r\nfunction debounce(fn, ms) {\r\n    let timer; \r\n    return () => { \r\n        clearTimeout(timer); \r\n        timer = setTimeout(() => { \r\n            timer = null;  \r\n            fn.apply(this, arguments);  \r\n        }, ms); \r\n    }; \r\n}\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            height: window.innerHeight,\r\n            width: window.innerWidth\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadColorsData();\r\n        this.props.loadFontFamilies();\r\n        this.handleResize();\r\n        window.addEventListener('resize', debounce(this.handleResize, 500));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', debounce(this.handleResize, 500));\r\n    }\r\n\r\n    handleResize = () => {\r\n        this.setState({\r\n            height: window.innerHeight,\r\n            width: window.innerWidth            \r\n        });\r\n        const cssFormHeight = document.querySelector('.css-form-container form').clientHeight;\r\n        const columnHeight = document.body.clientWidth > RESHAPE_WIDTH ? window.innerHeight - 90 : cssFormHeight;\r\n        const header = document.querySelector('.app-header');\r\n        if (document.body.clientWidth < RESHAPE_WIDTH) {\r\n            header.style.display = 'none';\r\n        }\r\n        else {\r\n            header.style.display = 'block';\r\n        }\r\n        this.props.setMainColumnsHeight(`${columnHeight}px`);\r\n    }\r\n\r\n    getPropertiesComponent() {\r\n        switch(this.props.property_type) {\r\n            case 'colors':\r\n                return <Colors />;\r\n            case 'fontsList':\r\n                return <FontsList />;\r\n            case 'otherInput':\r\n                return <InputContainer />;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    getDisplayColumnHeight() {\r\n        const cssForm = document.querySelector('.css-form-container');\r\n        if (!cssForm)\r\n            return 0;\r\n        const cssFormHeight = cssForm.clientHeight;\r\n        const windowHeight = window.innerHeight;\r\n        return document.body.clientWidth > RESHAPE_WIDTH ? this.props.mainColumnsHeight : windowHeight - cssFormHeight - 30;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home-columns-container\">\r\n                <div id=\"main-CssForm-container\" style={{height: this.props.mainColumnsHeight}}>\r\n                    <CssForm /> \r\n                </div>\r\n                <div id=\"main-Display-container\" style={{height: this.getDisplayColumnHeight()}}>\r\n                    <Display />\r\n                </div>\r\n                <div id=\"main-Inputs-container\" style={{height: this.props.mainColumnsHeight}}>\r\n                    { this.getPropertiesComponent() }\r\n                </div>\r\n            </div>            \r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react'\r\nimport '../css/Navbar.css'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <div className=\"app-header\">\r\n            <header>\r\n                <h3>ColourSchemes</h3>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\n\nimport Home from './components/Home';\nimport Navbar from './components/Navbar';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App-Container\">\n      <Navbar />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as ActionTypes from './actionTypes';\r\n\r\nconst initState = ActionTypes.initState;\r\n\r\nconst rootReducer = (state=initState, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.LOAD_COLORS_DATA:\r\n            return {\r\n                ...state,\r\n                colors_list: action.payload.colors_list,\r\n                colorsDOL: action.payload.colorsDOL,\r\n                colorNamesList: action.payload.colorNamesList,\r\n                color_groups_unique: action.payload.color_groups_unique,\r\n            };\r\n\r\n        case ActionTypes.LOAD_FONT_FAMILIES:\r\n            return { ...state, fontFamilies: action.payload };\r\n\r\n        case ActionTypes.UPDATE_CSS_PROPERTY_VALUE:\r\n            const cssProperties = {...state.cssProperties, [action.payload.id_prop]: action.payload.value };\r\n            return { ...state, cssProperties: cssProperties };\r\n\r\n        case ActionTypes.SET_ID_PROP_SELECTED:\r\n            return { ...state, id_prop_selected: action.payload };\r\n\r\n        case ActionTypes.SET_PROPERTY_TYPE:\r\n            return { ...state, property_type: action.payload };\r\n\r\n        case ActionTypes.SET_MAIN_COLUMNS_HEIGHT:\r\n            return { ...state, mainColumnsHeight: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './redux/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}